@using FarmPhoto.Domain
@model FarmPhoto.Website.Models.PhotoModel
<div class="portraitframe" style="width: @Model.Width; height: @Model.Height">
    <div class="previousPhoto"></div>
    <div class="nextPhoto"></div>
    <img src="@Url.Action("Image", "Gallery", new { fileName = Model.FileName, thumbnail = false })" alt="" />
</div>

<button class="ui-button ui-widget ui-state-default ui-corner-all ui-button-icon-only ui-dialog-titlebar-close" role="button" title="close">
    <span class="ui-button-icon-primary ui-icon ui-icon-closethick"></span>
    <span class="ui-button-text">close</span>
</button>

@Html.HiddenFor(m => m.Rating.Score)
@Html.HiddenFor(m => m.Rating.UserHasVoted)

<div class="form-photoupdate">
    <div class="updatephotofields">

        @Html.HiddenFor(m => m.PhotoId)
        @Html.HiddenFor(m => m.UserId)
        <div class="formRow">
            @Html.LabelFor(m => m.Title)
            @Html.TextBoxFor(m => m.Title)
        </div>
        <div class="validationmessage">
            @Html.ValidationMessageFor(m => m.Title)
        </div>
        <div class="formRow">
            @Html.LabelFor(m => m.Description)
            @Html.TextBoxFor(m => m.Description)
        </div>
        <div class="validationmessage">
            @Html.ValidationMessageFor(m => m.Description)
        </div>
        <div class="formRow">
            @Html.LabelFor(m => m.TagString)
            @Html.TextBoxFor(m => m.TagString)
        </div>
        <div class="validationmessage">
            @Html.ValidationMessageFor(m => m.TagString)
        </div>
        <div class="voteArea">
            <div class="rate"></div>
            <div class="voteCountDiv">(<span class="voteCount">@Model.Rating.Count</span>&nbsp;votes)</div>
        </div>
        <div class="ratingValidationMessage"><span></span></div>
        <button id="Update" class="btn btn-primary" type="submit">Update</button>
        <button id="Delete" class="btn btn-danger" type="submit">Delete</button>
    </div>
</div>
