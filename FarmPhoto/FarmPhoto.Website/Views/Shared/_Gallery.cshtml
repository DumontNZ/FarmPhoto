@using FarmPhoto.Domain
@model FarmPhoto.Website.Models.GalleryModel

<div class="photoalbum">
    @Html.HiddenFor(m=>m.ListOfPhotoIds)
    @foreach (var photo in Model.PhotoModels)
    {
        <div class="photoframe" id= "@photo.PhotoId">
            <a href="@Url.Action("Photo", "Gallery", new { id = @photo.PhotoId })" class="openDialog" >
                <img src="@Url.Action("Image", "Gallery", new { fileName = photo.FileName })" alt="" />
            </a>

            Submitted by @Html.RouteLink(photo.SubmittedBy, "Username", new { username = photo.SubmittedBy, page = 1 })
        </div>
    }
</div>

<div id="partial" class="dialog"></div>

<script type="text/javascript">

    $.ajaxSetup({ cache: false });

    $(document).ready(function () {

        var dialog = $("#partial").dialog({
            autoOpen: false,
            height: 'auto',
            width: 'auto',
            show: 'scale',
            hide: 'scale',
            resizable: true,
            modal: true,
            open: function (event, ui) {
                //$("body").on('click', '.ui-widget-overlay', function () {
                //    $("#partial").dialog('close');
                //});

                updateLinks();
                enableRatingSystem(); 
            }
        });

        var enableRatingSystem = function() {
            $('.rate').raty({
                score: $('#Rating_Score').val(),
                half: true,
                path: "../../../Content/Images",
                click: function (score, evt) {
                    var that = $(this);
                    var photoId = $("#PhotoId").val();
                    var currentUser = $("#CurrentUser").val();
                    var userHasVoted = $("#Rating_UserHasVoted").val();

                    if (currentUser == 0) {
                        $("input[name=score]").val($('#Rating_Score').val());
                        $(".ratingValidationMessage span").addClass("text-error");
                        $(".ratingValidationMessage span").text("You must be logged in to rate a photo");
                        $(".ratingValidationMessage").fadeIn();
                    } else {
                        if (currentUser != $('#UserId').val()) {
                            if (userHasVoted == 'False') {
                                $("#Rating_UserHasVoted").val("True");
                                $.ajax({
                                    url: "@Url.Action("Rate", "Submission")",
                                        type: "POST",
                                        data: { score: score, photoId: photoId },
                                        success: function (data) {
                                            if (data.Success) {
                                                $('#Rating_Score').val(data.Rating.Score);
                                                $("input[name=score]").val(data.Rating.Score);
                                                $('.voteCount').text(data.Rating.Count);
                                                $(".ratingValidationMessage span").addClass("text-success");
                                                $(".ratingValidationMessage span").text("Rating was Successful!");
                                                $(".ratingValidationMessage").fadeIn();
                                            }
                                        }
                                    });
                                } else {
                                    $("input[name=score]").val($('#Rating_Score').val());
                                    $(".ratingValidationMessage span").removeClass("text-success");
                                    $(".ratingValidationMessage span").addClass("text-error");
                                    $(".ratingValidationMessage span").text("You can only rate a photo once");
                                    $(".ratingValidationMessage").fadeIn();
                                }
                            } else {
                                $("input[name=score]").val($('#Rating_Score').val());
                                $(".ratingValidationMessage span").addClass("text-error");
                                $(".ratingValidationMessage span").text("You cant rate your own photo");
                                $(".ratingValidationMessage").fadeIn();
                            }
                        }
                    }
            });
        };

        var updateLinks = function() {
            var photoIdArray = $('#ListOfPhotoIds').val().split(",");
            var currentPhotoId = $('#PhotoId').val();
            for (var i = 0; i < photoIdArray.length; i++) {
                if (currentPhotoId == photoIdArray[i]) {
                    $('.nextPhoto').attr('href', "/Gallery/Photo?id=" + photoIdArray[i + 1]);
                    $('.previousPhoto').attr('href', "/Gallery/Photo?id=" + photoIdArray[i - 1]);

                    if (i == 0) {
                        $('.previousPhoto').remove(); 
                    }
                    if (i == photoIdArray.length-2) {
                        $('.nextPhoto').remove(); 
                    }
                }
            }
        };

        $('body').on('ready', '#parital',  function() {
            alert("changed Bitch"); 
        });

        $(".openDialog").on("click", function (e) {
            e.preventDefault();

            $.get(this.href).done(function (results) {
                dialog.html(results);
                dialog.dialog("open");
            });
        });

        $("body").on("mouseover", ".portraitframe", function () {
            var portraitWidth = $(".portraitframe").width();

            $(".nextPhoto").css({ width: portraitWidth - 100 });
            $(".nextArrow").css({ left: portraitWidth - 136 });
            $(".photoNavigation").fadeIn('fast');
        });

        $("body").on("mouseleave", ".portraitframe", function () {
            $(".photoNavigation").fadeOut('fast');
        });

        $("body").on('click', ".nextPhoto", function (e) {
            e.preventDefault();

            $.get(this.href).done(function (results) {
                dialog.html(results);
                updateLinks();
                enableRatingSystem();
            });
        });

        $("body").on('click', ".previousPhoto", function (e) {
            e.preventDefault();

            $.get(this.href).done(function (results) {
                dialog.html(results);
                updateLinks();
                enableRatingSystem();
            });
        });


        $("body").on('click', '.editPhoto', function (e) {
            e.preventDefault();

            $.get(this.href).done(function (results) {
                dialog.html(results);
                enableRatingSystem();
            });
        });

        $("body").on('click', '.ui-dialog-titlebar-close', function () {
            $("#partial").dialog("close");
        });

        $("body").on('click', '#Update', function () {

            var formData = {
                Title: $('#Title').val(),
                Description: $('#Description').val(),
                Tags: $('#TagString').val(),
                UserId: $('#UserId').val(),
                PhotoId: $('#PhotoId').val()
            };

            var valid = validateForm(formData);

            if (valid) {
                $.ajax({
                    url: "@Url.Action("Update", "Submission")",
                    type: "POST",
                    data: formData,
                    success: function (data) {
                        if (data.Success) {
                            $("#partial").dialog('close');
                            new FarmPhoto.Dialogs.Messaging().showSuccessMessage("Photo Updated");
                        }
                    }
                });
            }
        });

        $("body").on('click', '#Delete', function () {
            $('<div></div>').appendTo('body')
                    .html('<div><h6>Are you sure you want to delete this photo?</h6></div>')
                    .dialog({
                        modal: true, title: 'Delete message', zIndex: 10000, autoOpen: true,
                        width: 'auto', resizable: false,
                        buttons: {
                            "YesButton": {
                                text: 'Yes',
                                id: 'yesButton',
                                click: function () {
                                    var that = $(this);
                                    var photoId = $('#PhotoId').val();
                                    $.ajax({
                                        url: "@Url.Action("Delete", "Submission")",
                                        type: "POST",
                                        data: { photoId: photoId, userId: $('#UserId').val() },
                                        success: function (data) {
                                            if (data.Success) {
                                                that.dialog("close");
                                                $("#partial").dialog('close');
                                                $("#" + photoId).hide('slow');
                                                new FarmPhoto.Dialogs.Messaging().showSuccessMessage("Photo Deleted");
                                            }
                                        }
                                    });
                                }
                            },
                            "NoButton": {
                                text: 'No',
                                id: 'noButton',
                                click: function () {
                                    $(this).dialog("close");

                                }
                            }
                        },
                        open: function () {
                        },
                        close: function (event, ui) {
                            $(this).remove();
                        }
                    });
        });

        var validateForm = function (data) {

            var valid = true;

            if (data.Title == "") {
                $('[data-valmsg-for="Title"]').text("Title must not be empty");
                $('[data-valmsg-for="Title"]').removeClass('field-validation-valid');
                $('[data-valmsg-for="Title"]').addClass('field-validation-error');
                valid = false;
            } else {
                $('[data-valmsg-for="Title"]').text("");
            }

            if (data.Description == "") {
                $('[data-valmsg-for="Description"]').text("Description must not be empty");
                $('[data-valmsg-for="Description"]').removeClass('field-validation-valid');
                $('[data-valmsg-for="Description"]').addClass('field-validation-error');
                valid = false;
            } else {
                $('[data-valmsg-for="Description"]').text("");
            }
            if (data.Tags == "") {
                $('[data-valmsg-for="TagString"]').text("Tags must not be empty");
                $('[data-valmsg-for="TagString"]').removeClass('field-validation-valid');
                $('[data-valmsg-for="TagString"]').addClass('field-validation-error');
                valid = false;
            } else {
                $('[data-valmsg-for="TagString"]').text("");
            }

            return valid;
        };
    });
</script>
